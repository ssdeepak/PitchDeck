import{e as f,s as y,S as b}from"./main-888e55a8.js";class F{container;inputs;state={isMounted:!1,isDestroyed:!1,hasError:!1,updateCount:0};metrics={mountTime:0,unmountTime:0,updateTimes:[],renderCount:0,errorCount:0};listeners=[];timers=[];observers=[];componentId;constructor(e,t){this.container=e,this.inputs=t,this.componentId=this.constructor.name,this.container.setAttribute("data-component",this.componentId),this.container.setAttribute("data-component-id",this.generateUniqueId())}async mount(){if(this.state.isMounted||this.state.isDestroyed)return;const e=performance.now();try{await this.onBeforeMount(),await this.render(),await this.onMounted(),this.state.isMounted=!0,this.state.mountTime=performance.now()-e,this.metrics.mountTime=this.state.mountTime,this.metrics.renderCount++,f.emit("component:mounted",{componentId:this.componentId,mountTime:this.state.mountTime})}catch(t){await this.handleError(t,"mount")}}async unmount(){if(!this.state.isMounted||this.state.isDestroyed)return;const e=performance.now();try{await this.onBeforeUnmount(),this.cleanup(),await this.onUnmounted(),this.state.isMounted=!1,this.state.isDestroyed=!0,this.metrics.unmountTime=performance.now()-e,f.emit("component:unmounted",{componentId:this.componentId,unmountTime:this.metrics.unmountTime})}catch(t){await this.handleError(t,"unmount")}}async update(e){if(!this.state.isMounted||this.state.isDestroyed)return;const t=performance.now();try{const r=this.inputs;if(this.inputs=e,await this.shouldUpdate(r,e)){await this.onBeforeUpdate(r,e),await this.render(),await this.onUpdated(r,e);const s=performance.now()-t;this.state.updateCount++,this.metrics.updateTimes.push(s),this.metrics.renderCount++,f.emit("component:updated",{componentId:this.componentId,updateTime:s,updateCount:this.state.updateCount})}}catch(r){await this.handleError(r,"update")}}async handleError(e,t){this.state.hasError=!0,this.state.errorMessage=e.message,this.metrics.errorCount++;const r={componentId:this.componentId,error:e,phase:t,timestamp:new Date,inputs:this.inputs};f.emit("component:error",r);try{await this.renderError(e)}catch{this.container.innerHTML=`
        <div class="component-error">
          <h3>Component Error</h3>
          <p>Component ${this.componentId} encountered an error</p>
          <details>
            <summary>Error Details</summary>
            <pre>${e.message}</pre>
          </details>
        </div>
      `}await this.onError(e,t)}cleanup(){this.listeners.forEach(e=>e()),this.listeners.length=0,this.timers.forEach(e=>clearTimeout(e)),this.timers.length=0,this.observers.forEach(e=>e.disconnect()),this.observers.length=0,this.container.innerHTML=""}addEventListener(e,t,r,s){e.addEventListener(t,r,s),this.listeners.push(()=>e.removeEventListener(t,r,s))}setTimeout(e,t){const r=window.setTimeout(e,t);return this.timers.push(r),r}addObserver(e){this.observers.push(e)}generateUniqueId(){return`${this.componentId}-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}getMetrics(){return{...this.metrics}}getState(){return{...this.state}}async onBeforeMount(){}async onMounted(){}async onBeforeUpdate(e,t){}async onUpdated(e,t){}async onBeforeUnmount(){}async onUnmounted(){}async onError(e,t){}async renderError(e){this.container.innerHTML=`
      <div class="component-error">
        <p>Error in ${this.componentId}: ${e.message}</p>
      </div>
    `}async shouldUpdate(e,t){if(!e&&!t)return!1;if(!e||!t)return!0;const r=Object.keys(e),s=Object.keys(t);return r.length!==s.length?!0:r.some(i=>e[i]!==t[i])}}class p{static instance;styleSheets=new Map;scopedStyles=new Map;cssVariables=new Map;constructor(){}static getInstance(){return p.instance||(p.instance=new p),p.instance}registerComponentStyles(e,t,r={}){const{scoped:s=!0,namespace:i=e,minify:o=!1}=r,a=this.generateScopeId(e),l=this.processStyles(t,a,s,i);return this.createStyleElement(e,l,o),this.scopedStyles.set(e,t),t.variables&&(this.cssVariables.set(e,t.variables),this.applyVariables(e,t.variables)),a}css(e,...t){let r=e[0]||"";for(let s=0;s<t.length;s++)r+=String(t[s])+(e[s+1]||"");return r}styled(e,t,r={}){const s=this.generateScopeId(e),i=this.parseCSS(t),o={componentId:e,styles:i};return this.registerComponentStyles(e,o,r),{scopeId:s,className:a=>this.getScopedClassName(a,s)}}getScopedClassName(e,t){return`${e}_${t}`}applyTheme(e,t){const s={...this.cssVariables.get(e)||{},...t};this.cssVariables.set(e,s),this.applyVariables(e,s)}removeComponentStyles(e){const t=this.styleSheets.get(e);t&&t.parentNode&&t.parentNode.removeChild(t),this.styleSheets.delete(e),this.scopedStyles.delete(e),this.cssVariables.delete(e)}hotReloadStyles(e,t){const r=this.generateScopeId(e),s=this.processStyles(t,r,!0,e),i=this.styleSheets.get(e);i&&(i.textContent=s),this.scopedStyles.set(e,t)}getAllStyles(){return new Map(this.scopedStyles)}generateScopeId(e){let t=0;for(let r=0;r<e.length;r++){const s=e.charCodeAt(r);t=(t<<5)-t+s,t=t&t}return Math.abs(t).toString(36).substring(0,6)}processStyles(e,t,r,s){let i="";e.variables&&(i+=this.generateVariablesCSS(e.variables,t));for(const o of e.styles){const a=r?this.scopeSelector(o.selector,t):o.selector;i+=this.generateRule(a,o.properties)}if(e.globals)for(const o of e.globals)i+=this.generateRule(o.selector,o.properties);return i}scopeSelector(e,t){return e.startsWith("@")?e:e.includes(",")?e.split(",").map(r=>this.scopeSingleSelector(r.trim(),t)).join(", "):this.scopeSingleSelector(e,t)}scopeSingleSelector(e,t){return e===":host"||e==="&"?`[data-component-scope="${t}"]`:e.startsWith(".")||e.startsWith("#")||/^[a-zA-Z]/.test(e)?`[data-component-scope="${t}"] ${e}`:e.startsWith(":")?`[data-component-scope="${t}"]${e}`:e}generateRule(e,t){const r=Object.entries(t).map(([s,i])=>`  ${this.kebabCase(s)}: ${i};`).join(`
`);return`${e} {
${r}
}

`}generateVariablesCSS(e,t){const r=Object.entries(e).map(([s,i])=>`  --${s}: ${i};`).join(`
`);return`[data-component-scope="${t}"] {
${r}
}

`}createStyleElement(e,t,r){let s=this.styleSheets.get(e);s||(s=document.createElement("style"),s.setAttribute("data-component-styles",e),document.head.appendChild(s),this.styleSheets.set(e,s)),s.textContent=r?this.minifyCSS(t):t}applyVariables(e,t){document.querySelectorAll(`[data-component-scope="${this.generateScopeId(e)}"]`).forEach(s=>{const i=s;Object.entries(t).forEach(([o,a])=>{i.style.setProperty(`--${o}`,a)})})}parseCSS(e){const t=[];return(e.match(/([^{}]+)\{([^{}]+)\}/g)||[]).forEach(s=>{const[,i,o]=s.match(/([^{}]+)\{([^{}]+)\}/)||[];if(i&&o){const a={};o.split(";").forEach(l=>{const[h,g]=l.split(":").map(x=>x.trim());h&&g&&(a[this.camelCase(h)]=g)}),t.push({selector:i.trim(),properties:a})}}),t}kebabCase(e){return e.replace(/[A-Z]/g,t=>`-${t.toLowerCase()}`)}camelCase(e){return e.replace(/-([a-z])/g,(t,r)=>r.toUpperCase())}minifyCSS(e){return e.replace(/\s+/g," ").replace(/;\s*}/g,"}").replace(/\s*{\s*/g,"{").replace(/\s*}\s*/g,"}").replace(/\s*,\s*/g,",").replace(/\s*;\s*/g,";").trim()}}const u=p.getInstance();class v extends F{scopeId;styleOptions;constructor(e,t,r={}){super(e,t),this.styleOptions={scoped:!0,...r}}registerStyles(e){return this.scopeId=u.registerComponentStyles(this.componentId,e,this.styleOptions),this.container.setAttribute("data-component-scope",this.scopeId),this.scopeId}className(e){return this.scopeId?u.getScopedClassName(e,this.scopeId):(console.warn(`Component ${this.componentId} has no scope ID. Did you forget to call registerStyles()?`),e)}applyTheme(e){u.applyTheme(this.componentId,e)}hotReloadStyles(e){this.scopeId&&u.hotReloadStyles(this.componentId,e)}cleanup(){super.cleanup(),u.removeComponentStyles(this.componentId)}async onBeforeMount(){const e=this.getStyles();this.registerStyles(e),await super.onBeforeMount()}}function S(m,e){return{componentId:e||"unknown",...m}}const n={primary:"var(--color-primary, #007AFF)",secondary:"var(--color-secondary, #5856D6)",success:"var(--color-success, #34C759)",warning:"var(--color-warning, #FF9500)",error:"var(--color-error, #FF3B30)",background:"var(--color-background, #FFFFFF)",surface:"var(--color-surface, #F2F2F7)",text:"var(--color-text, #000000)",textSecondary:"var(--color-text-secondary, #8E8E93)"},c={xs:"var(--spacing-xs, 4px)",sm:"var(--spacing-sm, 8px)",md:"var(--spacing-md, 16px)",lg:"var(--spacing-lg, 24px)",xl:"var(--spacing-xl, 32px)",xxl:"var(--spacing-xxl, 48px)"},d={fontFamily:'var(--font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif)',fontSize:{xs:"var(--font-size-xs, 12px)",sm:"var(--font-size-sm, 14px)",md:"var(--font-size-md, 16px)",lg:"var(--font-size-lg, 18px)",xl:"var(--font-size-xl, 24px)",xxl:"var(--font-size-xxl, 32px)"},fontWeight:{normal:"var(--font-weight-normal, 400)",medium:"var(--font-weight-medium, 500)",semibold:"var(--font-weight-semibold, 600)",bold:"var(--font-weight-bold, 700)"}};class E extends v{authService;async onBeforeMount(){console.log("FileExplorer: onBeforeMount called");try{this.authService=y.get(b.AUTH_SERVICE),console.log("FileExplorer: Auth service obtained:",!!this.authService)}catch(e){console.error("FileExplorer: Failed to get auth service:",e)}await super.onBeforeMount()}explorerState={currentPath:"",selectedFiles:[],viewMode:"list",sortBy:"name",sortDirection:"asc",filterText:""};files=[];filteredFiles=[];history=[""];historyIndex=0;isLoading=!1;dragState={isDragging:!1,dragFiles:[]};clipboard=null;virtualScrollContainer;visibleStartIndex=0;visibleEndIndex=50;itemHeight=32;getStyles(){return S({styles:[{selector:".file-explorer",properties:{display:"flex",flexDirection:"column",height:"100%",width:"100%",backgroundColor:n.background,fontFamily:d.fontFamily,fontSize:d.fontSize.sm,overflow:"hidden",border:`1px solid ${n.surface}`,borderRadius:"6px"}},{selector:".toolbar",properties:{display:"flex",alignItems:"center",padding:c.sm,borderBottom:`1px solid ${n.surface}`,gap:c.sm,backgroundColor:n.surface,flexShrink:"0",minHeight:"48px",width:"100%",boxSizing:"border-box"}},{selector:".nav-buttons",properties:{display:"flex",gap:c.xs}},{selector:".nav-btn",properties:{padding:`${c.xs} ${c.sm}`,border:`1px solid ${n.surface}`,borderRadius:"4px",backgroundColor:n.background,color:n.text,cursor:"pointer",display:"flex",alignItems:"center",justifyContent:"center",minWidth:"32px",height:"32px",fontSize:d.fontSize.sm,fontWeight:d.fontWeight.medium,transition:"all 0.15s ease"}},{selector:".nav-btn:hover:not(:disabled)",properties:{backgroundColor:n.primary,color:n.background,borderColor:n.primary}},{selector:".nav-btn:disabled",properties:{opacity:"0.4",cursor:"not-allowed",backgroundColor:n.surface,color:n.textSecondary}},{selector:".address-bar",properties:{flex:"1",padding:`${c.sm} ${c.md}`,border:`1px solid ${n.surface}`,borderRadius:"4px",fontSize:d.fontSize.sm,backgroundColor:n.background,color:n.text,outline:"none",minWidth:"0"}},{selector:".address-bar:focus",properties:{borderColor:n.primary,boxShadow:`0 0 0 2px ${n.primary}20`}},{selector:".search-box",properties:{width:"200px",padding:`${c.sm} ${c.md}`,border:`1px solid ${n.surface}`,borderRadius:"4px",fontSize:d.fontSize.sm,backgroundColor:n.background,color:n.text,outline:"none"}},{selector:".search-box:focus",properties:{borderColor:n.primary,boxShadow:`0 0 0 2px ${n.primary}20`}},{selector:".view-controls",properties:{display:"flex",gap:c.xs}},{selector:".file-list-container",properties:{flex:"1",overflow:"auto",position:"relative",backgroundColor:n.background,minHeight:"200px"}},{selector:".file-list",properties:{padding:c.sm,minHeight:"100%"}},{selector:".file-item",properties:{display:"flex",alignItems:"center",padding:`${c.sm} ${c.md}`,borderRadius:"4px",cursor:"pointer",transition:"all 0.15s ease",gap:c.sm,minHeight:"40px",userSelect:"none",border:"1px solid transparent"}},{selector:".file-item:hover",properties:{backgroundColor:n.surface,borderColor:n.surface}},{selector:".file-item.selected",properties:{backgroundColor:n.primary+"30",color:n.primary,borderColor:n.primary,borderWidth:"2px",fontWeight:d.fontWeight.semibold}},{selector:".file-icon",properties:{width:"5px",height:"5px",flexShrink:"0",fontSize:"16px",display:"flex",alignItems:"center",justifyContent:"center"}},{selector:".file-name",properties:{flex:"1",overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap",fontSize:d.fontSize.sm,fontWeight:d.fontWeight.medium}},{selector:".file-size",properties:{width:"100px",textAlign:"right",color:n.textSecondary,fontSize:d.fontSize.xs,fontFamily:"monospace"}},{selector:".file-date",properties:{width:"140px",textAlign:"right",color:n.textSecondary,fontSize:d.fontSize.xs,fontFamily:"monospace"}},{selector:".loading",properties:{display:"flex",alignItems:"center",justifyContent:"center",height:"100px",color:n.textSecondary}},{selector:".empty-state",properties:{display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",height:"200px",color:n.textSecondary,gap:c.md}},{selector:".drag-overlay",properties:{position:"fixed",top:"0",left:"0",right:"0",bottom:"0",backgroundColor:n.primary+"10",border:`2px dashed ${n.primary}`,display:"flex",alignItems:"center",justifyContent:"center",fontSize:d.fontSize.lg,color:n.primary,zIndex:"999",pointerEvents:"none"}}],globals:[{selector:".context-menu",properties:{position:"fixed",backgroundColor:n.background,border:`1px solid ${n.surface}`,borderRadius:"6px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",padding:c.xs,zIndex:"1000",minWidth:"160px"}},{selector:".context-menu-item",properties:{padding:`${c.xs} ${c.sm}`,cursor:"pointer",borderRadius:"4px",fontSize:d.fontSize.sm,transition:"background-color 0.15s ease"}},{selector:".context-menu-item:hover",properties:{backgroundColor:n.surface}}]},this.componentId)}async render(){try{this.container.style.height="100%",this.container.style.width="100%",this.container.style.overflow="hidden",this.container.style.display="flex",this.container.style.flexDirection="column",console.log("File Explorer rendering..."),console.log("Scope ID:",this.scopeId),console.log("Component ID:",this.componentId);const e=this.className("toolbar");console.log("Generated toolbar class:",e);const t=document.querySelectorAll("style[data-component-styles]");if(console.log("Style elements in DOM:",t.length),t.forEach(r=>{console.log("Style element for:",r.getAttribute("data-component-styles"))}),!this.scopeId){console.warn("No scope ID - manually registering styles");const r=this.getStyles();this.registerStyles(r)}this.container.innerHTML=`
      <div class="${this.className("file-explorer")}" style="display: flex; flex-direction: column; height: 100%; background: white; border: 1px solid #e5e7eb; border-radius: 6px;">
        <!-- Toolbar -->
        <div class="${this.className("toolbar")}" style="display: flex; align-items: center; padding: 8px; border-bottom: 1px solid #e5e7eb; gap: 8px; background: #f8fafc; min-height: 48px;">
          <div class="${this.className("nav-buttons")}" style="display: flex; gap: 4px;">
            <button class="${this.className("nav-btn")}" id="btn-back" title="Back" ${this.canNavigateBack()?"":"disabled"} style="padding: 4px 8px; border: 1px solid #e5e7eb; border-radius: 4px; background: white; cursor: pointer; min-width: 32px; height: 32px;">
              ←
            </button>
            <button class="${this.className("nav-btn")}" id="btn-forward" title="Forward" ${this.canNavigateForward()?"":"disabled"}>
              →
            </button>
            <button class="${this.className("nav-btn")}" id="btn-up" title="Up" ${this.explorerState.currentPath?"":"disabled"}>
              ↑
            </button>
            <button class="${this.className("nav-btn")}" id="btn-refresh" title="Refresh">
              ⟳
            </button>
            <button class="${this.className("nav-btn")}" id="btn-upload" title="Upload Files">
              ↑
            </button>
          </div>
          
          <input 
            type="text" 
            class="${this.className("address-bar")}" 
            id="address-bar"
            placeholder="Path..."
            value="${this.explorerState.currentPath||"/"}"
            style="flex: 1; padding: 8px 12px; border: 1px solid #e5e7eb; border-radius: 4px; background: white; outline: none;"
          />
          
          <input 
            type="text" 
            class="${this.className("search-box")}" 
            id="search-box"
            placeholder="Search files..."
            value="${this.explorerState.filterText}"
            style="width: 200px; padding: 8px 12px; border: 1px solid #e5e7eb; border-radius: 4px; background: white; outline: none;"
          />
          
          <div class="${this.className("view-controls")}" style="display: flex; gap: 4px;">
            <button class="${this.className("nav-btn")}" id="btn-list" title="List View" style="padding: 4px 8px; border: 1px solid #e5e7eb; border-radius: 4px; background: white; cursor: pointer; min-width: 32px; height: 32px;">
              ☰
            </button>
            <button class="${this.className("nav-btn")}" id="btn-grid" title="Grid View" style="padding: 4px 8px; border: 1px solid #e5e7eb; border-radius: 4px; background: white; cursor: pointer; min-width: 32px; height: 32px;">
              ⊞
            </button>
          </div>
        </div>

        <!-- File List Container -->
        <div class="${this.className("file-list-container")}" id="file-list-container" style="flex: 1; overflow: auto; background: white; min-height: 200px;">
          ${this.renderFileList()}
        </div>
        
        <!-- Debug Panel -->
        <div style="padding: 8px; border-top: 1px solid #e5e7eb; background: #f8fafc; font-size: 12px; font-family: monospace;">
          <div>Path: ${this.explorerState.currentPath||"/"}</div>
          <div>Files: ${this.files.length}, Filtered: ${this.filteredFiles.length}</div>
          <div>Loading: ${this.isLoading}</div>
          <div>Auth: ${this.authService?"Service OK":"No Service"}</div>
          <div style="margin-top: 4px; color: #059669; font-weight: bold;">💡 Single-click folders to open them, Ctrl+click to select</div>
        </div>
      </div>
    `,this.setupEventListeners();try{console.log("FileExplorer: About to call loadFiles"),await this.loadFiles(this.explorerState.currentPath),console.log("FileExplorer: loadFiles completed"),this.updateNavigationButtons()}catch(r){console.error("FileExplorer: Error in loadFiles:",r)}}catch(e){console.error("FileExplorer: Error in render method:",e)}}renderFileList(){if(this.isLoading)return`<div class="${this.className("loading")}">Loading files...</div>`;if(this.filteredFiles.length===0)return`
        <div class="${this.className("empty-state")}">
          <div>📁</div>
          <div>No files found</div>
          ${this.explorerState.filterText?"<div>Try clearing the search filter</div>":""}
        </div>
      `;const e=this.filteredFiles.slice(this.visibleStartIndex,this.visibleEndIndex);return`
      <div class="${this.className("file-list")}" id="file-list" style="padding: 8px; min-height: 100%;">
        ${e.map((t,r)=>this.renderFileItem(t,this.visibleStartIndex+r)).join("")}
      </div>
    `}renderFileItem(e,t){const r=this.explorerState.selectedFiles.some(a=>a.path===e.path),s=this.getFileIcon(e),i=e.isDirectory?"":this.formatFileSize(e.size||0),o=e.modifiedDate?new Date(e.modifiedDate).toLocaleDateString():"";return`
      <div 
        class="${this.className("file-item")} ${r?"selected":""}" 
        data-file-index="${t}"
        data-file-path="${e.path||e.name}"
        draggable="true"
        style="display: flex; align-items: center; padding: 8px 12px; border-radius: 4px; cursor: pointer; gap: 8px; min-height: 40px; border: 1px solid transparent; transition: background-color 0.15s ease;"
      >
        <div class="${this.className("file-icon")}" style="width: 5px; height: 5px; flex-shrink: 0; display: flex; align-items: center; justify-content: center;">${s}</div>
        <div class="${this.className("file-name")}" title="${e.name}" style="flex: 1; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; font-weight: 500;">${e.name}</div>
        <div class="${this.className("file-size")}" style="width: 100px; text-align: right; color: #6b7280; font-size: 12px; font-family: monospace;">${i}</div>
        <div class="${this.className("file-date")}" style="width: 140px; text-align: right; color: #6b7280; font-size: 12px; font-family: monospace;">${o}</div>
      </div>
    `}setupEventListeners(){this.addEventListener(this.container.querySelector("#btn-back"),"click",()=>this.navigateBack()),this.addEventListener(this.container.querySelector("#btn-forward"),"click",()=>this.navigateForward()),this.addEventListener(this.container.querySelector("#btn-up"),"click",()=>this.navigateUp()),this.addEventListener(this.container.querySelector("#btn-refresh"),"click",()=>this.refresh()),this.addEventListener(this.container.querySelector("#btn-upload"),"click",()=>this.triggerFileUpload());const e=this.container.querySelector("#address-bar");this.addEventListener(e,"keydown",s=>{s.key==="Enter"&&this.navigateToPath(e.value)});const t=this.container.querySelector("#search-box");this.addEventListener(t,"input",this.debounce(()=>{this.explorerState.filterText=t.value,this.applyFilter(),this.updateFileList(),this.updateDebugPanel()},300)),this.addEventListener(this.container.querySelector("#btn-list"),"click",()=>this.setViewMode("list")),this.addEventListener(this.container.querySelector("#btn-grid"),"click",()=>this.setViewMode("grid"));const r=this.container.querySelector("#file-list-container");this.addEventListener(r,"click",s=>this.handleFileClick(s)),this.addEventListener(r,"dblclick",s=>this.handleFileDoubleClick(s)),this.addEventListener(r,"contextmenu",s=>this.handleContextMenu(s)),this.addEventListener(r,"dragstart",s=>this.handleDragStart(s)),this.addEventListener(r,"dragover",s=>this.handleDragOver(s)),this.addEventListener(r,"drop",s=>this.handleDrop(s)),this.addEventListener(r,"dragleave",s=>this.handleDragLeave(s)),this.addEventListener(r,"scroll",this.debounce(()=>this.updateVirtualScroll(),16)),window.addEventListener("click",s=>{const i=document.getElementById("context-menu");i&&!i.contains(s.target)&&s.target!==i&&(console.log("FileExplorer: closing context menu due to outside click"),this.closeContextMenu())}),window.addEventListener("keydown",s=>this.handleKeyboardShortcuts(s))}handleKeyboardShortcuts(e){if(!(e.target instanceof HTMLInputElement||e.target instanceof HTMLTextAreaElement))if(e.ctrlKey||e.metaKey)switch(e.key.toLowerCase()){case"c":e.preventDefault(),this.showError("Copy operation is not supported by the current VFS API");break;case"x":e.preventDefault(),this.showError("Cut operation is not supported by the current VFS API");break;case"v":e.preventDefault(),this.showError("Paste operation is not supported by the current VFS API");break;case"a":e.preventDefault(),this.selectAll();break}else e.key==="Delete"||e.key==="Backspace"?this.explorerState.selectedFiles.length>0&&this.deleteFiles(this.explorerState.selectedFiles):e.key==="F2"?this.explorerState.selectedFiles.length===1&&this.renameFile(this.explorerState.selectedFiles[0]):e.key==="F5"&&this.refresh()}selectAll(){this.explorerState.selectedFiles=[...this.filteredFiles],this.updateFileList(),this.updateDebugPanel()}canNavigateBack(){return this.historyIndex>0}canNavigateForward(){return this.historyIndex<this.history.length-1}async navigateBack(){if(console.log("FileExplorer: navigateBack called, canNavigateBack:",this.canNavigateBack(),"historyIndex:",this.historyIndex,"history:",this.history),this.canNavigateBack()){this.historyIndex--;const e=this.history[this.historyIndex];console.log("FileExplorer: navigating back to:",e),e!==void 0&&(await this.loadFiles(e),this.updateNavigationButtons())}}async navigateForward(){if(console.log("FileExplorer: navigateForward called, canNavigateForward:",this.canNavigateForward(),"historyIndex:",this.historyIndex,"history:",this.history),this.canNavigateForward()){this.historyIndex++;const e=this.history[this.historyIndex];console.log("FileExplorer: navigating forward to:",e),e!==void 0&&(await this.loadFiles(e),this.updateNavigationButtons())}}async navigateUp(){if(!this.explorerState.currentPath)return;const e=this.explorerState.currentPath.split("/").slice(0,-1).join("/");await this.navigateToPath(e)}async navigateToPath(e){console.log("FileExplorer: navigateToPath called with:",e);const t=e.startsWith("/")?e.substring(1):e;console.log("FileExplorer: navigateToPath normalized path:",t),t!==this.explorerState.currentPath&&(this.history=this.history.slice(0,this.historyIndex+1),this.history.push(t),this.historyIndex=this.history.length-1),console.log("FileExplorer: navigateToPath calling loadFiles with:",t),await this.loadFiles(t),console.log("FileExplorer: navigateToPath completed")}async refresh(){await this.loadFiles(this.explorerState.currentPath)}async loadFiles(e){console.log("FileExplorer: loadFiles called with path:",e),this.isLoading=!0,this.updateFileList(),this.updateDebugPanel();try{const t=this.authService.isAuthenticated();if(console.log("FileExplorer: User authenticated:",t),!t){console.warn("User not authenticated, cannot load files from server"),this.files=[];return}console.log("FileExplorer: Calling loadFilesFromAPI"),this.files=await this.loadFilesFromAPI(e),console.log("FileExplorer: Loaded files:",this.files.length),this.explorerState.currentPath=e,this.applyFilter(),this.updateDebugPanel(),this.updateNavigationButtons(),this.explorerState.selectedFiles=[];const r=this.container.querySelector("#address-bar");r&&(r.value=e||"/")}catch(t){console.error("Failed to load files:",t),this.showError("Failed to load files: "+(t instanceof Error?t.message:"Unknown error")),this.files=[]}finally{this.isLoading=!1,this.updateFileList(),this.updateDebugPanel()}}applyFilter(){let e=[...this.files];if(this.explorerState.filterText){const t=this.explorerState.filterText.toLowerCase();e=e.filter(r=>r.name.toLowerCase().includes(t))}e.sort((t,r)=>{let s=0;switch(this.explorerState.sortBy){case"name":s=t.name.localeCompare(r.name);break;case"date":const i=new Date(t.modifiedDate||0).getTime(),o=new Date(r.modifiedDate||0).getTime();s=i-o;break;case"size":s=(t.size||0)-(r.size||0);break;case"type":s=(t.type||"").localeCompare(r.type||"");break}return this.explorerState.sortDirection==="desc"?-s:s}),this.filteredFiles=e}updateFileList(){const e=this.container.querySelector("#file-list-container");e&&(e.innerHTML=this.renderFileList())}triggerFileUpload(){const e=document.createElement("input");e.type="file",e.multiple=!0,e.style.display="none",e.addEventListener("change",async t=>{const r=t.target,s=Array.from(r.files||[]);s.length>0&&await this.uploadFiles(s),document.body.removeChild(e)}),document.body.appendChild(e),e.click()}updateNavigationButtons(){const e=this.container.querySelector("#btn-back"),t=this.container.querySelector("#btn-forward"),r=this.container.querySelector("#btn-up"),s=this.canNavigateBack(),i=this.canNavigateForward(),o=!(!this.explorerState.currentPath||this.explorerState.currentPath==="");console.log("FileExplorer: updateNavigationButtons - canBack:",s,"canForward:",i,"canUp:",o,"currentPath:",this.explorerState.currentPath),e&&(e.disabled=!s),t&&(t.disabled=!i),r&&(r.disabled=!o)}updateDebugPanel(){const e=this.container.querySelector(".debug-panel");e&&(e.innerHTML=`
        <div>Path: ${this.explorerState.currentPath||"/"}</div>
        <div>Files: ${this.files.length}, Filtered: ${this.filteredFiles.length}</div>
        <div>Loading: ${this.isLoading}</div>
        <div>Auth: ${this.authService?"Service OK":"No Service"}</div>
      `)}handleFileClick(e){const t=e.target,r=t.closest("[data-file-path]");if(console.log("FileExplorer: handleFileClick - target:",t,"fileItem:",r),!r)return;const s=r.dataset.filePath;console.log("FileExplorer: handleFileClick - filePath from data attribute:",s);const i=this.filteredFiles.find(a=>(a.path||a.name)===s);if(console.log("FileExplorer: handleFileClick - found file:",i),!i)return;const o=e;if(o.ctrlKey||o.metaKey)this.explorerState.selectedFiles.some(l=>l.path===i.path)?this.explorerState.selectedFiles=this.explorerState.selectedFiles.filter(l=>l.path!==i.path):this.explorerState.selectedFiles.push(i);else if(i.isDirectory){console.log("FileExplorer: handleFileClick - navigating into directory:",i.path||i.name),this.navigateToPath(i.path||i.name);return}else this.explorerState.selectedFiles=[i];console.log("FileExplorer: handleFileClick - selected files after click:",this.explorerState.selectedFiles.length,this.explorerState.selectedFiles),this.updateFileList(),this.updateDebugPanel()}async handleFileDoubleClick(e){const t=e.target,r=t.closest("[data-file-path]");if(console.log("FileExplorer: handleFileDoubleClick - target:",t,"fileItem:",r),!r)return;const s=r.dataset.filePath;console.log("FileExplorer: handleFileDoubleClick - filePath from data attribute:",s);const i=this.filteredFiles.find(o=>(o.path||o.name)===s);console.log("FileExplorer: handleFileDoubleClick - found file:",i,"isDirectory:",i?.isDirectory),i&&(i.isDirectory?(console.log("FileExplorer: handleFileDoubleClick - navigating into directory:",i.path||i.name),await this.navigateToPath(i.path||i.name)):(console.log("FileExplorer: handleFileDoubleClick - opening file:",i.name),await this.openFile(i)))}handleContextMenu(e){e.preventDefault();const r=e.target.closest("[data-file-path]"),s=e;this.showContextMenu(s.clientX,s.clientY,r?.dataset.filePath)}handleDragStart(e){const t=e,s=t.target.closest("[data-file-path]");if(!s||!t.dataTransfer)return;const i=s.dataset.filePath,o=this.filteredFiles.find(a=>(a.path||a.name)===i);o&&(this.dragState.isDragging=!0,this.dragState.dragFiles=this.explorerState.selectedFiles.includes(o)?this.explorerState.selectedFiles:[o],t.dataTransfer.setData("text/plain",JSON.stringify(this.dragState.dragFiles)),t.dataTransfer.effectAllowed="move")}handleDragOver(e){e.preventDefault();const t=e;t.dataTransfer&&(t.dataTransfer.dropEffect="move")}handleDragLeave(e){}async handleDrop(e){e.preventDefault();const t=e;if(t.dataTransfer?.files.length){await this.handleExternalFileDrop(t);return}const r=t.dataTransfer?.getData("text/plain");if(r)try{const s=JSON.parse(r),o=t.target.closest("[data-file-path]")?.dataset.filePath||this.explorerState.currentPath;await this.moveFiles(s,o)}catch(s){console.error("Failed to handle file drop:",s)}this.dragState.isDragging=!1,this.dragState.dragFiles=[]}handleKeyboard(e){if(this.container.contains(document.activeElement))switch(e.key){case"F5":e.preventDefault(),this.refresh();break;case"Delete":this.explorerState.selectedFiles.length>0&&this.deleteFiles(this.explorerState.selectedFiles);break;case"F2":if(this.explorerState.selectedFiles.length===1){const t=this.explorerState.selectedFiles[0];t&&this.renameFile(t)}break;case"Escape":this.explorerState.selectedFiles=[],this.updateFileList(),this.updateDebugPanel(),this.closeContextMenu();break}}getFileIcon(e){if(e.isDirectory)return"📁";switch(e.name.split(".").pop()?.toLowerCase()){case"txt":case"md":return"📄";case"pdf":return"📕";case"jpg":case"jpeg":case"png":case"gif":return"🖼️";case"mp3":case"wav":return"🎵";case"mp4":case"avi":return"🎬";case"zip":case"rar":return"📦";case"js":case"ts":case"html":case"css":return"💻";default:return"📄"}}formatFileSize(e){if(e===0)return"0 B";const t=1024,r=["B","KB","MB","GB"],s=Math.floor(Math.log(e)/Math.log(t));return parseFloat((e/Math.pow(t,s)).toFixed(1))+" "+r[s]}debounce(e,t){let r;return(...s)=>{clearTimeout(r),r=window.setTimeout(()=>e.apply(this,s),t)}}setViewMode(e){this.explorerState.viewMode=e,this.updateFileList(),this.updateDebugPanel()}updateVirtualScroll(){}showContextMenu(e,t,r){this.closeContextMenu();const s=r?this.filteredFiles.find(l=>(l.path||l.name)===r):null,i=this.explorerState.selectedFiles.length,o=[...s?.isDirectory?[{label:"Open",action:()=>this.navigateToPath(s.path||s.name)}]:[{label:"Open",action:()=>this.openFile(s)}],{label:"Rename",action:()=>this.renameFile(s),disabled:i!==1},{label:"Delete",action:()=>this.deleteFiles(this.explorerState.selectedFiles),disabled:i===0},{label:"---"},{label:"Cut",action:()=>this.cutFiles(this.explorerState.selectedFiles),disabled:!0,tooltip:"Not supported by current VFS API"},{label:"Copy",action:()=>this.copyFiles(this.explorerState.selectedFiles),disabled:!0,tooltip:"Not supported by current VFS API"},{label:"Paste",action:()=>this.pasteFiles(),disabled:!0,tooltip:"Not supported by current VFS API"},{label:"---"},{label:"New Folder",action:()=>this.createFolder()},{label:"New File",action:()=>this.createFile()}],a=document.createElement("div");a.className="context-menu",a.style.position="fixed",a.style.left=`${e}px`,a.style.top=`${t}px`,a.style.zIndex="10000",a.style.backgroundColor="#ffffff",a.style.border="1px solid #e5e7eb",a.style.borderRadius="6px",a.style.boxShadow="0 4px 12px rgba(0,0,0,0.15)",a.style.padding="4px 0",a.style.minWidth="160px",a.id="context-menu",a.innerHTML=o.filter(l=>l.label!=="---").map(l=>`
        <div class="context-menu-item" 
             data-action="${l.label}"
             style="padding: 8px 12px; cursor: pointer; border-radius: 4px; font-size: 14px; transition: background-color 0.15s ease; ${l.disabled?"opacity: 0.5; pointer-events: none;":"color: #000000;"}">
          ${l.label}
        </div>
      `).join(""),document.body.appendChild(a),o.forEach(l=>{if(l.label!=="---"&&!l.disabled){const h=a.querySelector(`[data-action="${l.label}"]`);h&&l.action&&(h.addEventListener("mouseenter",()=>{h.style.backgroundColor="#f3f4f6"}),h.addEventListener("mouseleave",()=>{h.style.backgroundColor="transparent"}),h.addEventListener("click",g=>{g.stopPropagation(),l.action(),this.closeContextMenu()}))}})}closeContextMenu(){const e=document.getElementById("context-menu");e&&e.remove()}async openFile(e){console.log("Opening file:",e.name),f.emit("file:open",{file:e,path:e.path||e.name,fullPath:this.explorerState.currentPath?`${this.explorerState.currentPath}/${e.name}`:e.name,currentDirectory:this.explorerState.currentPath||"/"})}async createFolder(){const e=prompt("Folder name:");if(e)try{await this.createFileOrFolderAPI(e,!0),await this.refresh()}catch(t){console.error("Failed to create folder:",t),alert("Failed to create folder")}}async createFile(){const e=prompt("File name:");if(e)try{await this.createFileOrFolderAPI(e,!1),await this.refresh()}catch(t){console.error("Failed to create file:",t),alert("Failed to create file")}}async deleteFiles(e){if(confirm(`Delete ${e.length} item(s)?`))try{await this.deleteFilesAPI(e),await this.refresh()}catch(t){console.error("Failed to delete files:",t),alert("Failed to delete files")}}async renameFile(e){const t=prompt("New name:",e.name);if(t&&t!==e.name)try{await this.renameFileAPI(e,t),await this.refresh()}catch(r){console.error("Failed to rename file:",r),alert("Failed to rename file")}}async moveFiles(e,t){throw new Error("Move operations are not supported by the current VFS API")}async copyFiles(e){console.log("Copying files:",e.map(t=>t.name)),this.clipboard={operation:"copy",files:[...e],sourcePath:this.explorerState.currentPath||""},console.log("Files copied to clipboard")}async cutFiles(e){console.log("Cutting files:",e.map(t=>t.name)),this.clipboard={operation:"cut",files:[...e],sourcePath:this.explorerState.currentPath||""},console.log("Files cut to clipboard")}async pasteFiles(){if(!this.clipboard||this.clipboard.files.length===0){console.log("No files in clipboard");return}console.log("Pasting files:",this.clipboard.files.map(e=>e.name));try{this.clipboard.operation==="copy"?await this.copyFilesToCurrentDirectory(this.clipboard.files):this.clipboard.operation==="cut"&&(await this.moveFilesToCurrentDirectory(this.clipboard.files),this.clipboard=null),await this.refresh()}catch(e){console.error("Failed to paste files:",e),this.showError(e instanceof Error?e.message:"Failed to paste files")}}async copyFilesToCurrentDirectory(e){throw new Error("Copy/paste operations are not supported by the current VFS API")}async moveFilesToCurrentDirectory(e){throw new Error("Move/cut operations are not supported by the current VFS API")}async handleExternalFileDrop(e){const t=Array.from(e.dataTransfer?.files||[]);console.log("Uploading files:",t.map(r=>r.name)),await this.uploadFiles(t)}async uploadFiles(e){if(e.length!==0)try{for(const t of e)await this.uploadFileAPI(t);await this.refresh(),console.log(`Successfully uploaded ${e.length} file(s)`)}catch(t){console.error("Failed to upload files:",t),this.showError("Failed to upload files")}}async uploadFileAPI(e){const t=this.authService.getToken();if(!t)throw new Error("Not authenticated");const r=new FormData;r.append("file",e),r.append("path",this.explorerState.currentPath||"");const s=await fetch("/api/files",{method:"POST",headers:{Authorization:`Bearer ${t}`},body:r});if(!s.ok){const i=await s.text();throw new Error(`Upload failed: ${i}`)}}async createFileOrFolderAPI(e,t){const r=this.getAuthHeaders();if(!r)throw new Error("Not authenticated");const s=await fetch("/api/files",{method:"POST",headers:r,body:JSON.stringify({name:e,isDirectory:t,path:this.explorerState.currentPath})});if(!s.ok)throw new Error(`HTTP ${s.status}: ${s.statusText}`)}async deleteFilesAPI(e){const t=this.getAuthHeaders();if(!t)throw new Error("Not authenticated");const r=e.map(o=>fetch(`/api/files/${encodeURIComponent(o.path)}`,{method:"DELETE",headers:t})),i=(await Promise.all(r)).filter(o=>!o.ok);if(i.length>0)throw new Error(`Failed to delete ${i.length} files`)}async renameFileAPI(e,t){const r=this.getAuthHeaders();if(!r)throw new Error("Not authenticated");const s=await fetch(`/api/files/${encodeURIComponent(e.path)}`,{method:"PUT",headers:r,body:JSON.stringify({name:t})});if(!s.ok)throw new Error(`HTTP ${s.status}: ${s.statusText}`)}async loadFilesFromAPI(e){console.log("FileExplorer: loadFilesFromAPI called with path:",e);try{const t=this.getAuthHeaders();if(console.log("FileExplorer: Auth headers present:",!!t),!t)throw new Error("Not authenticated");const r=`/api/files?path=${encodeURIComponent(e||"/")}`;console.log("FileExplorer: Making request to:",r);const s=await fetch(r,{method:"GET",headers:t});if(console.log("FileExplorer: Response status:",s.status,s.statusText),console.log("FileExplorer: Response URL:",s.url),!s.ok){const o=await s.text();throw console.error("FileExplorer: API error response:",o),new Error(`HTTP ${s.status}: ${s.statusText}`)}const i=await s.json();return console.log("FileExplorer: API returned files:",i.length,"files"),i.forEach((o,a)=>{console.log(`FileExplorer: File ${a}:`,{name:o.name,path:o.path,isDirectory:o.isDirectory,size:o.size,modifiedDate:o.modifiedDate})}),i}catch(t){return console.error("Failed to load files from API:",t),console.log("FileExplorer: Falling back to mock data"),this.mockLoadFiles(e)}}showError(e){const t=document.createElement("div");t.style.cssText=`
      position: absolute;
      top: 10px;
      right: 10px;
      background: #ef4444;
      color: white;
      padding: 8px 12px;
      border-radius: 4px;
      font-size: 14px;
      z-index: 1000;
      max-width: 300px;
    `,t.textContent=e,this.container.appendChild(t),setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},5e3)}getAuthHeaders(){const e=this.authService.getToken();return console.log("FileExplorer: getAuthHeaders - token present:",!!e),e?{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}:null}async mockLoadFiles(e){return await new Promise(t=>setTimeout(t,200)),[{name:"Documents",isDirectory:!0,path:"documents",modifiedDate:"2025-09-20T10:00:00Z"},{name:"Projects",isDirectory:!0,path:"projects",modifiedDate:"2025-09-22T15:30:00Z"},{name:"readme.txt",size:1024,type:"text/plain",path:"readme.txt",modifiedDate:"2025-09-23T08:15:00Z"},{name:"image.jpg",size:2048576,type:"image/jpeg",path:"image.jpg",modifiedDate:"2025-09-21T14:45:00Z"}]}}export{E as FileExplorerComponent};
//# sourceMappingURL=file-explorer.component-ed9cca65.js.map
