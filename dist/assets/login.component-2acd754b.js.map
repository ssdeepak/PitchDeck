{"version":3,"file":"login.component-2acd754b.js","sources":["../../src/components/windows/login.component.ts"],"sourcesContent":["/**\r\n * Login Component\r\n * Professional login form component for VFS Desktop\r\n */\r\n\r\nimport { BaseComponent } from '../base/base-component.js';\r\nimport { serviceContainer, SERVICE_TOKENS } from '../../core/di/service-container.js';\r\nimport { eventBus } from '../../core/events/event-bus.js';\r\nimport type { IAuthService, IWindowManager } from '../../core/types/index.js';\r\n\r\nexport class LoginComponent extends BaseComponent {\r\n  private authService!: IAuthService;\r\n  private windowManager!: IWindowManager;\r\n\r\n  // Form state\r\n  private formData = {\r\n    username: '',\r\n    password: '',\r\n    rememberMe: true\r\n  };\r\n\r\n  private isLoading = false;\r\n  private errorMessage: string | null = null;\r\n\r\n  /**\r\n   * Mount the login component\r\n   */\r\n  async mount(): Promise<void> {\r\n    console.log('Mounting Login component...');\r\n\r\n    // Get required services\r\n    this.authService = serviceContainer.get(SERVICE_TOKENS.AUTH_SERVICE);\r\n    this.windowManager = serviceContainer.get(SERVICE_TOKENS.WINDOW_MANAGER);\r\n\r\n    // Build the login form\r\n    this.buildLoginForm();\r\n\r\n    // Setup event listeners\r\n    this.setupEventListeners();\r\n\r\n    this._mounted = true;\r\n    console.log('Login component mounted');\r\n  }\r\n\r\n  /**\r\n   * Build the complete login form structure\r\n   */\r\n  private buildLoginForm(): void {\r\n    this.container.innerHTML = '';\r\n    this.container.className = 'window-login-container';\r\n\r\n    // Create header\r\n    this.createHeader();\r\n\r\n    // Create form\r\n    this.createForm();\r\n  }\r\n\r\n  /**\r\n   * Create login header\r\n   */\r\n  private createHeader(): void {\r\n    const header = this.createElement('div', { class: 'login-header' });\r\n    \r\n    const title = this.createElement('h2', {}, 'Welcome to VFS Desktop');\r\n    const subtitle = this.createElement('p', {}, 'Enter your credentials to access your files');\r\n    \r\n    header.appendChild(title);\r\n    header.appendChild(subtitle);\r\n    this.container.appendChild(header);\r\n  }\r\n\r\n  /**\r\n   * Create login form\r\n   */\r\n  private createForm(): void {\r\n    const form = this.createElement('form', { class: 'login-form' });\r\n    \r\n    // Error message container\r\n    const errorContainer = this.createElement('div', { \r\n      class: 'error-message',\r\n      style: 'display: none;'\r\n    });\r\n    form.appendChild(errorContainer);\r\n\r\n    // Username field\r\n    const usernameGroup = this.createFormGroup(\r\n      'username',\r\n      'Username',\r\n      'text',\r\n      'Enter your username',\r\n      this.formData.username\r\n    );\r\n    form.appendChild(usernameGroup);\r\n\r\n    // Password field\r\n    const passwordGroup = this.createFormGroup(\r\n      'password',\r\n      'Password',\r\n      'password',\r\n      'Enter your password',\r\n      this.formData.password\r\n    );\r\n    form.appendChild(passwordGroup);\r\n\r\n    // Remember me checkbox\r\n    const checkboxGroup = this.createCheckboxGroup(\r\n      'rememberMe',\r\n      'Remember me',\r\n      this.formData.rememberMe\r\n    );\r\n    form.appendChild(checkboxGroup);\r\n\r\n    // Form actions\r\n    const actionsGroup = this.createFormActions();\r\n    form.appendChild(actionsGroup);\r\n\r\n    // Handle form submission\r\n    this.addEventListener(form, 'submit', (e) => {\r\n      e.preventDefault();\r\n      this.handleLogin();\r\n    });\r\n\r\n    this.container.appendChild(form);\r\n  }\r\n\r\n  /**\r\n   * Create a form group with label and input\r\n   */\r\n  private createFormGroup(\r\n    id: string,\r\n    label: string,\r\n    type: string,\r\n    placeholder: string,\r\n    value: string\r\n  ): HTMLElement {\r\n    const group = this.createElement('div', { class: 'form-group' });\r\n    \r\n    const labelEl = this.createElement('label', { for: id }, label);\r\n    const input = this.createElement('input', {\r\n      type,\r\n      id,\r\n      name: id,\r\n      placeholder,\r\n      value,\r\n      autocomplete: id === 'username' ? 'username' : 'current-password'\r\n    }) as HTMLInputElement;\r\n\r\n    // Update form data on input change\r\n    this.addEventListener(input, 'input', () => {\r\n      (this.formData as any)[id] = input.value;\r\n    });\r\n\r\n    group.appendChild(labelEl);\r\n    group.appendChild(input);\r\n    \r\n    return group;\r\n  }\r\n\r\n  /**\r\n   * Create checkbox form group\r\n   */\r\n  private createCheckboxGroup(id: string, label: string, checked: boolean): HTMLElement {\r\n    const group = this.createElement('div', { class: 'form-group checkbox' });\r\n    \r\n    const input = this.createElement('input', {\r\n      type: 'checkbox',\r\n      id,\r\n      name: id,\r\n      ...(checked ? { checked: 'checked' } : {})\r\n    }) as HTMLInputElement;\r\n\r\n    const labelEl = this.createElement('label', { for: id }, label);\r\n\r\n    // Update form data on change\r\n    this.addEventListener(input, 'change', () => {\r\n      (this.formData as any)[id] = input.checked;\r\n    });\r\n\r\n    group.appendChild(input);\r\n    group.appendChild(labelEl);\r\n    \r\n    return group;\r\n  }\r\n\r\n  /**\r\n   * Create form actions (buttons)\r\n   */\r\n  private createFormActions(): HTMLElement {\r\n    const actions = this.createElement('div', { class: 'form-actions' });\r\n    \r\n    // Login button\r\n    const loginBtn = this.createElement('button', {\r\n      type: 'submit',\r\n      class: 'btn btn-primary',\r\n      id: 'login-btn'\r\n    });\r\n    \r\n    const loginText = this.createElement('span', {}, 'Login');\r\n    loginBtn.appendChild(loginText);\r\n    \r\n    // Register button\r\n    const registerBtn = this.createElement('button', {\r\n      type: 'button',\r\n      class: 'btn btn-link'\r\n    }, 'Create Account');\r\n\r\n    this.addEventListener(registerBtn, 'click', () => this.goToRegister());\r\n\r\n    actions.appendChild(loginBtn);\r\n    actions.appendChild(registerBtn);\r\n    \r\n    return actions;\r\n  }\r\n\r\n  /**\r\n   * Setup event listeners\r\n   */\r\n  private setupEventListeners(): void {\r\n    // Listen for auth events\r\n    eventBus.on('auth:login', () => this.handleLoginSuccess());\r\n  }\r\n\r\n  /**\r\n   * Handle login form submission\r\n   */\r\n  private async handleLogin(): Promise<void> {\r\n    // Validate form\r\n    if (!this.formData.username.trim() || !this.formData.password.trim()) {\r\n      this.showError('Username and password are required');\r\n      return;\r\n    }\r\n\r\n    // Set loading state\r\n    this.setLoading(true);\r\n    this.clearError();\r\n\r\n    try {\r\n      // Attempt login\r\n      const user = await this.authService.login(\r\n        this.formData.username.trim(),\r\n        this.formData.password\r\n      );\r\n\r\n      console.log('Login successful:', user.username);\r\n      \r\n      // Success will be handled by event listener\r\n      \r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      this.showError(\r\n        error instanceof Error ? error.message : 'Login failed. Please try again.'\r\n      );\r\n    } finally {\r\n      this.setLoading(false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle successful login\r\n   */\r\n  private async handleLoginSuccess(): Promise<void> {\r\n    try {\r\n      // Show success notification\r\n      this.showNotification('Login Successful', `Welcome back, ${this.formData.username}!`);\r\n\r\n      // Small delay for UX\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n\r\n      // Close login window\r\n      this.windowManager.closeWindow('login');\r\n\r\n      // Open file explorer\r\n      setTimeout(() => {\r\n        this.openFileExplorer();\r\n      }, 200);\r\n\r\n    } catch (error) {\r\n      console.error('Error handling login success:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to register window\r\n   */\r\n  private async goToRegister(): Promise<void> {\r\n    try {\r\n      // Create register window\r\n      await this.windowManager.createWindow('register', {\r\n        title: 'Create Account',\r\n        size: { width: 450, height: 500 },\r\n        position: { x: 150, y: 100 }\r\n      });\r\n\r\n      // Close login window\r\n      this.windowManager.closeWindow('login');\r\n    } catch (error) {\r\n      console.error('Error opening register window:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Open file explorer (placeholder)\r\n   */\r\n  private async openFileExplorer(): Promise<void> {\r\n    try {\r\n      await this.windowManager.createWindow('file-explorer', {\r\n        title: 'File Explorer',\r\n        size: { width: 800, height: 600 },\r\n        position: { x: 200, y: 100 }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error opening file explorer:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show error message\r\n   */\r\n  private showError(message: string): void {\r\n    this.errorMessage = message;\r\n    const errorEl = this.container.querySelector('.error-message') as HTMLElement;\r\n    if (errorEl) {\r\n      errorEl.textContent = message;\r\n      errorEl.style.display = 'block';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear error message\r\n   */\r\n  private clearError(): void {\r\n    this.errorMessage = null;\r\n    const errorEl = this.container.querySelector('.error-message') as HTMLElement;\r\n    if (errorEl) {\r\n      errorEl.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set loading state\r\n   */\r\n  private setLoading(loading: boolean): void {\r\n    this.isLoading = loading;\r\n    \r\n    const loginBtn = this.container.querySelector('#login-btn') as HTMLButtonElement;\r\n    const form = this.container.querySelector('form') as HTMLFormElement;\r\n    \r\n    if (loginBtn && form) {\r\n      loginBtn.disabled = loading;\r\n      \r\n      // Update button content\r\n      if (loading) {\r\n        loginBtn.innerHTML = `\r\n          <span class=\"spinner\"></span>\r\n          <span>Logging in...</span>\r\n        `;\r\n      } else {\r\n        loginBtn.innerHTML = '<span>Login</span>';\r\n      }\r\n\r\n      // Disable form inputs\r\n      const inputs = form.querySelectorAll('input, button');\r\n      inputs.forEach((input: Element) => {\r\n        (input as HTMLInputElement | HTMLButtonElement).disabled = loading;\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show notification (placeholder - would integrate with notification service)\r\n   */\r\n  private showNotification(title: string, message: string): void {\r\n    console.log(`${title}: ${message}`);\r\n    // TODO: Integrate with notification service when available\r\n  }\r\n\r\n  /**\r\n   * Unmount the login component\r\n   */\r\n  override async unmount(): Promise<void> {\r\n    // Clean up event listeners\r\n    eventBus.off('auth:login', this.handleLoginSuccess);\r\n    \r\n    await this.baseUnmount();\r\n    console.log('Login component unmounted');\r\n  }\r\n}"],"names":["LoginComponent","BaseComponent","serviceContainer","SERVICE_TOKENS","header","title","subtitle","form","errorContainer","usernameGroup","passwordGroup","checkboxGroup","actionsGroup","e","id","label","type","placeholder","value","group","labelEl","input","checked","actions","loginBtn","loginText","registerBtn","eventBus","user","error","resolve","message","errorEl","loading"],"mappings":"4DAUO,MAAMA,UAAuBC,CAAc,CACxC,YACA,cAGA,SAAW,CACjB,SAAU,GACV,SAAU,GACV,WAAY,EAAA,EAGN,UAAY,GACZ,aAA8B,KAKtC,MAAM,OAAuB,CAC3B,QAAQ,IAAI,6BAA6B,EAGzC,KAAK,YAAcC,EAAiB,IAAIC,EAAe,YAAY,EACnE,KAAK,cAAgBD,EAAiB,IAAIC,EAAe,cAAc,EAGvE,KAAK,eAAe,EAGpB,KAAK,oBAAoB,EAEzB,KAAK,SAAW,GAChB,QAAQ,IAAI,yBAAyB,CACvC,CAKQ,gBAAuB,CAC7B,KAAK,UAAU,UAAY,GAC3B,KAAK,UAAU,UAAY,yBAG3B,KAAK,aAAa,EAGlB,KAAK,WAAW,CAClB,CAKQ,cAAqB,CAC3B,MAAMC,EAAS,KAAK,cAAc,MAAO,CAAE,MAAO,eAAgB,EAE5DC,EAAQ,KAAK,cAAc,KAAM,CAAA,EAAI,wBAAwB,EAC7DC,EAAW,KAAK,cAAc,IAAK,CAAA,EAAI,6CAA6C,EAE1FF,EAAO,YAAYC,CAAK,EACxBD,EAAO,YAAYE,CAAQ,EACtB,KAAA,UAAU,YAAYF,CAAM,CACnC,CAKQ,YAAmB,CACzB,MAAMG,EAAO,KAAK,cAAc,OAAQ,CAAE,MAAO,aAAc,EAGzDC,EAAiB,KAAK,cAAc,MAAO,CAC/C,MAAO,gBACP,MAAO,gBAAA,CACR,EACDD,EAAK,YAAYC,CAAc,EAG/B,MAAMC,EAAgB,KAAK,gBACzB,WACA,WACA,OACA,sBACA,KAAK,SAAS,QAAA,EAEhBF,EAAK,YAAYE,CAAa,EAG9B,MAAMC,EAAgB,KAAK,gBACzB,WACA,WACA,WACA,sBACA,KAAK,SAAS,QAAA,EAEhBH,EAAK,YAAYG,CAAa,EAG9B,MAAMC,EAAgB,KAAK,oBACzB,aACA,cACA,KAAK,SAAS,UAAA,EAEhBJ,EAAK,YAAYI,CAAa,EAGxB,MAAAC,EAAe,KAAK,oBAC1BL,EAAK,YAAYK,CAAY,EAG7B,KAAK,iBAAiBL,EAAM,SAAWM,GAAM,CAC3CA,EAAE,eAAe,EACjB,KAAK,YAAY,CAAA,CAClB,EAEI,KAAA,UAAU,YAAYN,CAAI,CACjC,CAKQ,gBACNO,EACAC,EACAC,EACAC,EACAC,EACa,CACb,MAAMC,EAAQ,KAAK,cAAc,MAAO,CAAE,MAAO,aAAc,EAEzDC,EAAU,KAAK,cAAc,QAAS,CAAE,IAAKN,GAAMC,CAAK,EACxDM,EAAQ,KAAK,cAAc,QAAS,CACxC,KAAAL,EACA,GAAAF,EACA,KAAMA,EACN,YAAAG,EACA,MAAAC,EACA,aAAcJ,IAAO,WAAa,WAAa,kBAAA,CAChD,EAGI,YAAA,iBAAiBO,EAAO,QAAS,IAAM,CACzC,KAAK,SAAiBP,CAAE,EAAIO,EAAM,KAAA,CACpC,EAEDF,EAAM,YAAYC,CAAO,EACzBD,EAAM,YAAYE,CAAK,EAEhBF,CACT,CAKQ,oBAAoBL,EAAYC,EAAeO,EAA+B,CACpF,MAAMH,EAAQ,KAAK,cAAc,MAAO,CAAE,MAAO,sBAAuB,EAElEE,EAAQ,KAAK,cAAc,QAAS,CACxC,KAAM,WACN,GAAAP,EACA,KAAMA,EACN,GAAIQ,EAAU,CAAE,QAAS,WAAc,CAAC,CAAA,CACzC,EAEKF,EAAU,KAAK,cAAc,QAAS,CAAE,IAAKN,GAAMC,CAAK,EAGzD,YAAA,iBAAiBM,EAAO,SAAU,IAAM,CAC1C,KAAK,SAAiBP,CAAE,EAAIO,EAAM,OAAA,CACpC,EAEDF,EAAM,YAAYE,CAAK,EACvBF,EAAM,YAAYC,CAAO,EAElBD,CACT,CAKQ,mBAAiC,CACvC,MAAMI,EAAU,KAAK,cAAc,MAAO,CAAE,MAAO,eAAgB,EAG7DC,EAAW,KAAK,cAAc,SAAU,CAC5C,KAAM,SACN,MAAO,kBACP,GAAI,WAAA,CACL,EAEKC,EAAY,KAAK,cAAc,OAAQ,CAAA,EAAI,OAAO,EACxDD,EAAS,YAAYC,CAAS,EAGxB,MAAAC,EAAc,KAAK,cAAc,SAAU,CAC/C,KAAM,SACN,MAAO,gBACN,gBAAgB,EAEnB,YAAK,iBAAiBA,EAAa,QAAS,IAAM,KAAK,cAAc,EAErEH,EAAQ,YAAYC,CAAQ,EAC5BD,EAAQ,YAAYG,CAAW,EAExBH,CACT,CAKQ,qBAA4B,CAElCI,EAAS,GAAG,aAAc,IAAM,KAAK,mBAAoB,CAAA,CAC3D,CAKA,MAAc,aAA6B,CAErC,GAAA,CAAC,KAAK,SAAS,SAAS,KAAA,GAAU,CAAC,KAAK,SAAS,SAAS,OAAQ,CACpE,KAAK,UAAU,oCAAoC,EACnD,MACF,CAGA,KAAK,WAAW,EAAI,EACpB,KAAK,WAAW,EAEZ,GAAA,CAEI,MAAAC,EAAO,MAAM,KAAK,YAAY,MAClC,KAAK,SAAS,SAAS,KAAK,EAC5B,KAAK,SAAS,QAAA,EAGR,QAAA,IAAI,oBAAqBA,EAAK,QAAQ,QAIvCC,EAAO,CACN,QAAA,MAAM,gBAAiBA,CAAK,EAC/B,KAAA,UACHA,aAAiB,MAAQA,EAAM,QAAU,iCAAA,CAC3C,QACA,CACA,KAAK,WAAW,EAAK,CACvB,CACF,CAKA,MAAc,oBAAoC,CAC5C,GAAA,CAEF,KAAK,iBAAiB,mBAAoB,iBAAiB,KAAK,SAAS,QAAQ,GAAG,EAGpF,MAAM,IAAI,QAAQC,GAAW,WAAWA,EAAS,GAAG,CAAC,EAGhD,KAAA,cAAc,YAAY,OAAO,EAGtC,WAAW,IAAM,CACf,KAAK,iBAAiB,GACrB,GAAG,QAECD,EAAO,CACN,QAAA,MAAM,gCAAiCA,CAAK,CACtD,CACF,CAKA,MAAc,cAA8B,CACtC,GAAA,CAEI,MAAA,KAAK,cAAc,aAAa,WAAY,CAChD,MAAO,iBACP,KAAM,CAAE,MAAO,IAAK,OAAQ,GAAI,EAChC,SAAU,CAAE,EAAG,IAAK,EAAG,GAAI,CAAA,CAC5B,EAGI,KAAA,cAAc,YAAY,OAAO,QAC/BA,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,CACvD,CACF,CAKA,MAAc,kBAAkC,CAC1C,GAAA,CACI,MAAA,KAAK,cAAc,aAAa,gBAAiB,CACrD,MAAO,gBACP,KAAM,CAAE,MAAO,IAAK,OAAQ,GAAI,EAChC,SAAU,CAAE,EAAG,IAAK,EAAG,GAAI,CAAA,CAC5B,QACMA,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,CACrD,CACF,CAKQ,UAAUE,EAAuB,CACvC,KAAK,aAAeA,EACpB,MAAMC,EAAU,KAAK,UAAU,cAAc,gBAAgB,EACzDA,IACFA,EAAQ,YAAcD,EACtBC,EAAQ,MAAM,QAAU,QAE5B,CAKQ,YAAmB,CACzB,KAAK,aAAe,KACpB,MAAMA,EAAU,KAAK,UAAU,cAAc,gBAAgB,EACzDA,IACFA,EAAQ,MAAM,QAAU,OAE5B,CAKQ,WAAWC,EAAwB,CACzC,KAAK,UAAYA,EAEjB,MAAMT,EAAW,KAAK,UAAU,cAAc,YAAY,EACpDjB,EAAO,KAAK,UAAU,cAAc,MAAM,EAE5CiB,GAAYjB,IACdiB,EAAS,SAAWS,EAGhBA,EACFT,EAAS,UAAY;AAAA;AAAA;AAAA,UAKrBA,EAAS,UAAY,qBAIRjB,EAAK,iBAAiB,eAAe,EAC7C,QAASc,GAAmB,CAChCA,EAA+C,SAAWY,CAAA,CAC5D,EAEL,CAKQ,iBAAiB5B,EAAe0B,EAAuB,CAC7D,QAAQ,IAAI,GAAG1B,CAAK,KAAK0B,CAAO,EAAE,CAEpC,CAKA,MAAe,SAAyB,CAE7BJ,EAAA,IAAI,aAAc,KAAK,kBAAkB,EAElD,MAAM,KAAK,cACX,QAAQ,IAAI,2BAA2B,CACzC,CACF"}