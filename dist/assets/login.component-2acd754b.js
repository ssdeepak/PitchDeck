import{B as p,s as c,S as l,e as h}from"./main-888e55a8.js";class u extends p{authService;windowManager;formData={username:"",password:"",rememberMe:!0};isLoading=!1;errorMessage=null;async mount(){console.log("Mounting Login component..."),this.authService=c.get(l.AUTH_SERVICE),this.windowManager=c.get(l.WINDOW_MANAGER),this.buildLoginForm(),this.setupEventListeners(),this._mounted=!0,console.log("Login component mounted")}buildLoginForm(){this.container.innerHTML="",this.container.className="window-login-container",this.createHeader(),this.createForm()}createHeader(){const e=this.createElement("div",{class:"login-header"}),t=this.createElement("h2",{},"Welcome to VFS Desktop"),r=this.createElement("p",{},"Enter your credentials to access your files");e.appendChild(t),e.appendChild(r),this.container.appendChild(e)}createForm(){const e=this.createElement("form",{class:"login-form"}),t=this.createElement("div",{class:"error-message",style:"display: none;"});e.appendChild(t);const r=this.createFormGroup("username","Username","text","Enter your username",this.formData.username);e.appendChild(r);const n=this.createFormGroup("password","Password","password","Enter your password",this.formData.password);e.appendChild(n);const o=this.createCheckboxGroup("rememberMe","Remember me",this.formData.rememberMe);e.appendChild(o);const s=this.createFormActions();e.appendChild(s),this.addEventListener(e,"submit",i=>{i.preventDefault(),this.handleLogin()}),this.container.appendChild(e)}createFormGroup(e,t,r,n,o){const s=this.createElement("div",{class:"form-group"}),i=this.createElement("label",{for:e},t),a=this.createElement("input",{type:r,id:e,name:e,placeholder:n,value:o,autocomplete:e==="username"?"username":"current-password"});return this.addEventListener(a,"input",()=>{this.formData[e]=a.value}),s.appendChild(i),s.appendChild(a),s}createCheckboxGroup(e,t,r){const n=this.createElement("div",{class:"form-group checkbox"}),o=this.createElement("input",{type:"checkbox",id:e,name:e,...r?{checked:"checked"}:{}}),s=this.createElement("label",{for:e},t);return this.addEventListener(o,"change",()=>{this.formData[e]=o.checked}),n.appendChild(o),n.appendChild(s),n}createFormActions(){const e=this.createElement("div",{class:"form-actions"}),t=this.createElement("button",{type:"submit",class:"btn btn-primary",id:"login-btn"}),r=this.createElement("span",{},"Login");t.appendChild(r);const n=this.createElement("button",{type:"button",class:"btn btn-link"},"Create Account");return this.addEventListener(n,"click",()=>this.goToRegister()),e.appendChild(t),e.appendChild(n),e}setupEventListeners(){h.on("auth:login",()=>this.handleLoginSuccess())}async handleLogin(){if(!this.formData.username.trim()||!this.formData.password.trim()){this.showError("Username and password are required");return}this.setLoading(!0),this.clearError();try{const e=await this.authService.login(this.formData.username.trim(),this.formData.password);console.log("Login successful:",e.username)}catch(e){console.error("Login failed:",e),this.showError(e instanceof Error?e.message:"Login failed. Please try again.")}finally{this.setLoading(!1)}}async handleLoginSuccess(){try{this.showNotification("Login Successful",`Welcome back, ${this.formData.username}!`),await new Promise(e=>setTimeout(e,100)),this.windowManager.closeWindow("login"),setTimeout(()=>{this.openFileExplorer()},200)}catch(e){console.error("Error handling login success:",e)}}async goToRegister(){try{await this.windowManager.createWindow("register",{title:"Create Account",size:{width:450,height:500},position:{x:150,y:100}}),this.windowManager.closeWindow("login")}catch(e){console.error("Error opening register window:",e)}}async openFileExplorer(){try{await this.windowManager.createWindow("file-explorer",{title:"File Explorer",size:{width:800,height:600},position:{x:200,y:100}})}catch(e){console.error("Error opening file explorer:",e)}}showError(e){this.errorMessage=e;const t=this.container.querySelector(".error-message");t&&(t.textContent=e,t.style.display="block")}clearError(){this.errorMessage=null;const e=this.container.querySelector(".error-message");e&&(e.style.display="none")}setLoading(e){this.isLoading=e;const t=this.container.querySelector("#login-btn"),r=this.container.querySelector("form");t&&r&&(t.disabled=e,e?t.innerHTML=`
          <span class="spinner"></span>
          <span>Logging in...</span>
        `:t.innerHTML="<span>Login</span>",r.querySelectorAll("input, button").forEach(o=>{o.disabled=e}))}showNotification(e,t){console.log(`${e}: ${t}`)}async unmount(){h.off("auth:login",this.handleLoginSuccess),await this.baseUnmount(),console.log("Login component unmounted")}}export{u as LoginComponent};
//# sourceMappingURL=login.component-2acd754b.js.map
